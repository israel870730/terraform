Application Architecture
The example application architecture we'll walk you through this workshop is called Product Catalog and is used in any eCommerce Application. 
We have attempted to pick different technology framework for building applications to include the polyglot nature of microservices-based applications.

This application is composed of three microservices:

Frontend
    Frontend service frontend-node shows the UI for the Product Catalog functionality
    Developed in Node.js with ejs templating
Product Catalog Backend
    Backend service prodcatalog is a Rest API Service that performs following operations:
        Add a Product into Product Catalog
        Get the Product from the Product Catalog
        Calls Catalog Detail backend service proddetail to get Product Catalog Detail information like vendors
        Get all the products from the Product Catalog

        /products
        {
            "products": {
                "1": "Table",
                "2": "Chair"
            },
            "details": {
                "version": "1",
                "vendors": [
                    "ABC.com"
                ]
            }
        }

    Developed in Python Flask Restplus with Swagger UI for Rest API

Catalog Detail Backend
    Backend service proddetail is a Rest API Service that performs following operation:
    Get catalog detail which includes version number and vendor names
    
    /catalogDetail
    {
        "version": "1",
        "vendors": [
            "ABC.com"
        ]
    }

    Developed in Nodejs

From the above diagram, the service-call relationship between the services in Product Catalog application can be summarized as:
    Frontend frontend-node >>>>> calls >>>>> Product Catalog backend prodcatalog.
    Product Catalog backend prodcatalog >>>>> calls >>>>> Catalog Detail backend proddetail.

Clone the Application
You can skip the below step if using Workshop Studio as it already clones the workshop application repository for you.

However, if you're trying out this workshop using EKS Blueprint, then please clone the application as below.

cd ~/environment
git clone https://github.com/aws-containers/eks-app-mesh-polyglot-demo.git
cd eks-app-mesh-polyglot-demo


