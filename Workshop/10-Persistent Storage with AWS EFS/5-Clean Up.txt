Clean Up

Cleaning up

Lets deploy the original Product Catalog Application that reads/writes products from in-memory.
cd ~/environment/eks-app-mesh-polyglot-demo
helm upgrade --reuse-values -f ~/environment/eks-app-mesh-polyglot-demo/workshop/helm-chart/values.yaml workshop workshop/helm-chart/

Delete the persistent volume claim that we created.
kubectl delete -f ~/environment/eks-app-mesh-polyglot-demo/workshop/efs-pvc.yaml

Unistall EFS CSI driver using helm.
helm uninstall --namespace kube-system aws-efs-csi-driver

Delete the mount targets associated with the EFS file system
FILE_SYSTEM_ID=$(aws efs describe-file-systems | jq --raw-output '.FileSystems[].FileSystemId')
targets=$(aws efs describe-mount-targets --file-system-id $FILE_SYSTEM_ID | jq --raw-output '.MountTargets[].MountTargetId')
for target in ${targets[@]}
do
    echo "deleting mount target " $target
    aws efs delete-mount-target --mount-target-id $target
done

Check the status of EFS file system to find out if the mount targets have all been deleted.
aws efs describe-file-systems --file-system-id $FILE_SYSTEM_ID

When the NumberOfMountTargets field in the JSON output reads 0, run the following command to delete the EFS file system.
aws efs delete-file-system --file-system-id $FILE_SYSTEM_ID

Delete the security group that is associated with the EFS file system

aws ec2 delete-security-group --group-id $MOUNT_TARGET_GROUP_ID